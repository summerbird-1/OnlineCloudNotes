{"remainingRequest":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue?vue&type=style&index=0&id=33714797&lang=less&scoped=true","dependencies":[{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue","mtime":1703320567681},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\css-loader@3.6.0\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\postcss-loader@3.0.0\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\less-loader@5.0.0\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29tbWVudC1jb250YWluZXIgew0KICBwYWRkaW5nOiA0MHB4IDIwcHg7DQogIC5zZWxmLWNvbW1lbnQgew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgbWFyZ2luLWJvdHRvbTogMTVweDsNCiAgfQ0KICAubG9naW4tdGlwIHsNCiAgICBoZWlnaHQ6IDMwcHg7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICB9DQogIC5jb21tZW50cyB7DQogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkOWQ5ZGE7DQogICAgcGFkZGluZy10b3A6IDQwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDMwcHg7DQogIH0NCn0NCg=="},{"version":3,"sources":["NoteCommentContainer.vue"],"names":[],"mappings":";AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NoteCommentContainer.vue","sourceRoot":"src/views/notes/childrens","sourcesContent":["<template>\r\n  <div class=\"comment-container\">\r\n    <div class=\"self-comment\" v-if=\"isLogin\">\r\n      <div>\r\n        <el-avatar :size=\"60\" :src=\"currentUserAvatar\"> </el-avatar>\r\n      </div>\r\n      <div style=\"width: 60%\">\r\n        <el-input\r\n          ref=\"postCommentInputRef\"\r\n          :placeholder=\"replyPlaceholder\"\r\n          v-model=\"commentContent\"\r\n        >\r\n        </el-input>\r\n      </div>\r\n      <div>\r\n        <el-button type=\"primary\" size=\"medium\" @click=\"postComment\"\r\n          >Post Comment</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"login-tip\">\r\n      <el-link type=\"primary\" :underline=\"false\" href=\"/login\"\r\n        >登录之后才能进行评论，点我跳转登录页面</el-link\r\n      >\r\n    </div>\r\n    <div class=\"comments\">\r\n      <div v-if=\"commentData.length != 0\">\r\n        <NoteCommentList\r\n          v-for=\"(item, index) in commentData\"\r\n          :key=\"index\"\r\n          :listData=\"item\"\r\n          :likeData=\"getLikeData(item)\"\r\n          @reloadLikeData=\"reloadLikeData\"\r\n          @replyUser=\"replyUser\"\r\n          @reloadComment=\"reloadComment\"\r\n        />\r\n      </div>\r\n      <div v-else style=\"text-align: center\">当前笔记下还未有评论~</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NoteCommentList from './NoteCommentList.vue'\r\nimport {\r\n  getCommentByNoteId,\r\n  getCommentLikeRelation,\r\n  saveComment\r\n} from '@/network/note/index.js'\r\nexport default {\r\n  data() {\r\n    return {\r\n      commentContent: '',\r\n      commentData: [],\r\n      likeRelation: [],\r\n      isReply: false,\r\n      currentReplyData: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n  },\r\n  computed: {\r\n    // 根据评论id去匹配对应的like\r\n    getLikeData() {\r\n      if (!this.likeRelation) return () => ({})\r\n      return (item) => {\r\n        return this.likeRelation.find((likeItem) => likeItem.id === item.id)\r\n      }\r\n    },\r\n    replyPlaceholder() {\r\n      return this.isReply\r\n        ? `Reply @${this.currentReplyData.userName}`\r\n        : 'Post A Friendly Comment'\r\n    },\r\n    isLogin() {\r\n      return this.$store.state.userInfo\r\n    },\r\n    currentUserAvatar() {\r\n      if (!this.$store.state.userInfo)\r\n        return 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png'\r\n      return this.$store.state.userInfo.avatarUrl\r\n    }\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      const { data } = await getCommentByNoteId(this.$route.query.id)\r\n      this.commentData = data\r\n      const { data: relationData } = await this.getLikeRelation()\r\n      this.likeRelation = relationData\r\n    },\r\n    getLikeRelation() {\r\n      return getCommentLikeRelation(\r\n        this.$store.state.userInfo?.userid,\r\n        this.$route.query.id\r\n      )\r\n    },\r\n    postComment() {\r\n      let commentData = {\r\n        userId: this.$store.state.userInfo.userid,\r\n        commentContent: this.commentContent,\r\n        noteId: this.$route.query.id\r\n      }\r\n      if (this.commentContent.length > 130) {\r\n        this.$message.warning('评论内容长度不能超过130个字符')\r\n        return\r\n      }\r\n      if (this.commentContent.trim().length == 0) {\r\n        this.$message.warning('不能发空白内容')\r\n        return\r\n      }\r\n      if (this.isReply) {\r\n        commentData.parentId =\r\n          this.currentReplyData.parentId == 0\r\n            ? this.currentReplyData.id\r\n            : this.currentReplyData.parentId\r\n        commentData.replyId = this.currentReplyData.id\r\n      } else {\r\n        commentData.parentId = 0\r\n        commentData.replyId = 0\r\n      }\r\n      saveComment(commentData).then(() => {\r\n        this.isReply = false\r\n        this.commentContent = ''\r\n        this.$message.success('发布评论成功')\r\n        this.getData()\r\n      })\r\n    },\r\n    async reloadLikeData() {\r\n      const { data: relationData } = await this.getLikeRelation()\r\n      relationData.forEach((item, index) => {\r\n        this.$set(this.likeRelation, index, item)\r\n      })\r\n    },\r\n    replyUser(replyCommentData) {\r\n      if (!this.$store.state.userInfo) {\r\n        this.$message.warning('请登录之后再进行操作')\r\n        return\r\n      }\r\n\r\n      if (this.commentContent) this.commentContent = ''\r\n      this.currentReplyData = replyCommentData\r\n      this.isReply = true\r\n      this.$refs.postCommentInputRef.focus()\r\n    },\r\n    reloadComment() {\r\n      this.getData()\r\n    }\r\n  },\r\n  components: { NoteCommentList }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.comment-container {\r\n  padding: 40px 20px;\r\n  .self-comment {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 15px;\r\n  }\r\n  .login-tip {\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .comments {\r\n    border-top: 1px solid #d9d9da;\r\n    padding-top: 40px;\r\n    margin-left: 30px;\r\n  }\r\n}\r\n</style>\r\n"]}]}