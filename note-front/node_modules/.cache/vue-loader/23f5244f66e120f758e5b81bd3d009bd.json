{"remainingRequest":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue","mtime":1703320567681},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\babel-loader@8.3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgTm90ZUNvbW1lbnRMaXN0IGZyb20gJy4vTm90ZUNvbW1lbnRMaXN0LnZ1ZScNCmltcG9ydCB7DQogIGdldENvbW1lbnRCeU5vdGVJZCwNCiAgZ2V0Q29tbWVudExpa2VSZWxhdGlvbiwNCiAgc2F2ZUNvbW1lbnQNCn0gZnJvbSAnQC9uZXR3b3JrL25vdGUvaW5kZXguanMnDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNvbW1lbnRDb250ZW50OiAnJywNCiAgICAgIGNvbW1lbnREYXRhOiBbXSwNCiAgICAgIGxpa2VSZWxhdGlvbjogW10sDQogICAgICBpc1JlcGx5OiBmYWxzZSwNCiAgICAgIGN1cnJlbnRSZXBseURhdGE6IHt9DQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuZ2V0RGF0YSgpDQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLy8g5qC55o2u6K+E6K66aWTljrvljLnphY3lr7nlupTnmoRsaWtlDQogICAgZ2V0TGlrZURhdGEoKSB7DQogICAgICBpZiAoIXRoaXMubGlrZVJlbGF0aW9uKSByZXR1cm4gKCkgPT4gKHt9KQ0KICAgICAgcmV0dXJuIChpdGVtKSA9PiB7DQogICAgICAgIHJldHVybiB0aGlzLmxpa2VSZWxhdGlvbi5maW5kKChsaWtlSXRlbSkgPT4gbGlrZUl0ZW0uaWQgPT09IGl0ZW0uaWQpDQogICAgICB9DQogICAgfSwNCiAgICByZXBseVBsYWNlaG9sZGVyKCkgew0KICAgICAgcmV0dXJuIHRoaXMuaXNSZXBseQ0KICAgICAgICA/IGBSZXBseSBAJHt0aGlzLmN1cnJlbnRSZXBseURhdGEudXNlck5hbWV9YA0KICAgICAgICA6ICdQb3N0IEEgRnJpZW5kbHkgQ29tbWVudCcNCiAgICB9LA0KICAgIGlzTG9naW4oKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8NCiAgICB9LA0KICAgIGN1cnJlbnRVc2VyQXZhdGFyKCkgew0KICAgICAgaWYgKCF0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mbykNCiAgICAgICAgcmV0dXJuICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzAvODgvMDNiMGQzOTU4M2Y0ODIwNjc2OGE3NTM0ZTU1YmNwbmcucG5nJw0KICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLmF2YXRhclVybA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGdldERhdGEoKSB7DQogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGdldENvbW1lbnRCeU5vdGVJZCh0aGlzLiRyb3V0ZS5xdWVyeS5pZCkNCiAgICAgIHRoaXMuY29tbWVudERhdGEgPSBkYXRhDQogICAgICBjb25zdCB7IGRhdGE6IHJlbGF0aW9uRGF0YSB9ID0gYXdhaXQgdGhpcy5nZXRMaWtlUmVsYXRpb24oKQ0KICAgICAgdGhpcy5saWtlUmVsYXRpb24gPSByZWxhdGlvbkRhdGENCiAgICB9LA0KICAgIGdldExpa2VSZWxhdGlvbigpIHsNCiAgICAgIHJldHVybiBnZXRDb21tZW50TGlrZVJlbGF0aW9uKA0KICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mbz8udXNlcmlkLA0KICAgICAgICB0aGlzLiRyb3V0ZS5xdWVyeS5pZA0KICAgICAgKQ0KICAgIH0sDQogICAgcG9zdENvbW1lbnQoKSB7DQogICAgICBsZXQgY29tbWVudERhdGEgPSB7DQogICAgICAgIHVzZXJJZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8udXNlcmlkLA0KICAgICAgICBjb21tZW50Q29udGVudDogdGhpcy5jb21tZW50Q29udGVudCwNCiAgICAgICAgbm90ZUlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZA0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMuY29tbWVudENvbnRlbnQubGVuZ3RoID4gMTMwKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+E6K665YaF5a656ZW/5bqm5LiN6IO96LaF6L+HMTMw5Liq5a2X56ymJykNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgICBpZiAodGhpcy5jb21tZW50Q29udGVudC50cmltKCkubGVuZ3RoID09IDApIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfkuI3og73lj5Hnqbrnmb3lhoXlrrknKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLmlzUmVwbHkpIHsNCiAgICAgICAgY29tbWVudERhdGEucGFyZW50SWQgPQ0KICAgICAgICAgIHRoaXMuY3VycmVudFJlcGx5RGF0YS5wYXJlbnRJZCA9PSAwDQogICAgICAgICAgICA/IHRoaXMuY3VycmVudFJlcGx5RGF0YS5pZA0KICAgICAgICAgICAgOiB0aGlzLmN1cnJlbnRSZXBseURhdGEucGFyZW50SWQNCiAgICAgICAgY29tbWVudERhdGEucmVwbHlJZCA9IHRoaXMuY3VycmVudFJlcGx5RGF0YS5pZA0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29tbWVudERhdGEucGFyZW50SWQgPSAwDQogICAgICAgIGNvbW1lbnREYXRhLnJlcGx5SWQgPSAwDQogICAgICB9DQogICAgICBzYXZlQ29tbWVudChjb21tZW50RGF0YSkudGhlbigoKSA9PiB7DQogICAgICAgIHRoaXMuaXNSZXBseSA9IGZhbHNlDQogICAgICAgIHRoaXMuY29tbWVudENvbnRlbnQgPSAnJw0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WPkeW4g+ivhOiuuuaIkOWKnycpDQogICAgICAgIHRoaXMuZ2V0RGF0YSgpDQogICAgICB9KQ0KICAgIH0sDQogICAgYXN5bmMgcmVsb2FkTGlrZURhdGEoKSB7DQogICAgICBjb25zdCB7IGRhdGE6IHJlbGF0aW9uRGF0YSB9ID0gYXdhaXQgdGhpcy5nZXRMaWtlUmVsYXRpb24oKQ0KICAgICAgcmVsYXRpb25EYXRhLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgIHRoaXMuJHNldCh0aGlzLmxpa2VSZWxhdGlvbiwgaW5kZXgsIGl0ZW0pDQogICAgICB9KQ0KICAgIH0sDQogICAgcmVwbHlVc2VyKHJlcGx5Q29tbWVudERhdGEpIHsNCiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8pIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fnmbvlvZXkuYvlkI7lho3ov5vooYzmk43kvZwnKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCg0KICAgICAgaWYgKHRoaXMuY29tbWVudENvbnRlbnQpIHRoaXMuY29tbWVudENvbnRlbnQgPSAnJw0KICAgICAgdGhpcy5jdXJyZW50UmVwbHlEYXRhID0gcmVwbHlDb21tZW50RGF0YQ0KICAgICAgdGhpcy5pc1JlcGx5ID0gdHJ1ZQ0KICAgICAgdGhpcy4kcmVmcy5wb3N0Q29tbWVudElucHV0UmVmLmZvY3VzKCkNCiAgICB9LA0KICAgIHJlbG9hZENvbW1lbnQoKSB7DQogICAgICB0aGlzLmdldERhdGEoKQ0KICAgIH0NCiAgfSwNCiAgY29tcG9uZW50czogeyBOb3RlQ29tbWVudExpc3QgfQ0KfQ0K"},{"version":3,"sources":["NoteCommentContainer.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NoteCommentContainer.vue","sourceRoot":"src/views/notes/childrens","sourcesContent":["<template>\r\n  <div class=\"comment-container\">\r\n    <div class=\"self-comment\" v-if=\"isLogin\">\r\n      <div>\r\n        <el-avatar :size=\"60\" :src=\"currentUserAvatar\"> </el-avatar>\r\n      </div>\r\n      <div style=\"width: 60%\">\r\n        <el-input\r\n          ref=\"postCommentInputRef\"\r\n          :placeholder=\"replyPlaceholder\"\r\n          v-model=\"commentContent\"\r\n        >\r\n        </el-input>\r\n      </div>\r\n      <div>\r\n        <el-button type=\"primary\" size=\"medium\" @click=\"postComment\"\r\n          >Post Comment</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"login-tip\">\r\n      <el-link type=\"primary\" :underline=\"false\" href=\"/login\"\r\n        >登录之后才能进行评论，点我跳转登录页面</el-link\r\n      >\r\n    </div>\r\n    <div class=\"comments\">\r\n      <div v-if=\"commentData.length != 0\">\r\n        <NoteCommentList\r\n          v-for=\"(item, index) in commentData\"\r\n          :key=\"index\"\r\n          :listData=\"item\"\r\n          :likeData=\"getLikeData(item)\"\r\n          @reloadLikeData=\"reloadLikeData\"\r\n          @replyUser=\"replyUser\"\r\n          @reloadComment=\"reloadComment\"\r\n        />\r\n      </div>\r\n      <div v-else style=\"text-align: center\">当前笔记下还未有评论~</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NoteCommentList from './NoteCommentList.vue'\r\nimport {\r\n  getCommentByNoteId,\r\n  getCommentLikeRelation,\r\n  saveComment\r\n} from '@/network/note/index.js'\r\nexport default {\r\n  data() {\r\n    return {\r\n      commentContent: '',\r\n      commentData: [],\r\n      likeRelation: [],\r\n      isReply: false,\r\n      currentReplyData: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n  },\r\n  computed: {\r\n    // 根据评论id去匹配对应的like\r\n    getLikeData() {\r\n      if (!this.likeRelation) return () => ({})\r\n      return (item) => {\r\n        return this.likeRelation.find((likeItem) => likeItem.id === item.id)\r\n      }\r\n    },\r\n    replyPlaceholder() {\r\n      return this.isReply\r\n        ? `Reply @${this.currentReplyData.userName}`\r\n        : 'Post A Friendly Comment'\r\n    },\r\n    isLogin() {\r\n      return this.$store.state.userInfo\r\n    },\r\n    currentUserAvatar() {\r\n      if (!this.$store.state.userInfo)\r\n        return 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png'\r\n      return this.$store.state.userInfo.avatarUrl\r\n    }\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      const { data } = await getCommentByNoteId(this.$route.query.id)\r\n      this.commentData = data\r\n      const { data: relationData } = await this.getLikeRelation()\r\n      this.likeRelation = relationData\r\n    },\r\n    getLikeRelation() {\r\n      return getCommentLikeRelation(\r\n        this.$store.state.userInfo?.userid,\r\n        this.$route.query.id\r\n      )\r\n    },\r\n    postComment() {\r\n      let commentData = {\r\n        userId: this.$store.state.userInfo.userid,\r\n        commentContent: this.commentContent,\r\n        noteId: this.$route.query.id\r\n      }\r\n      if (this.commentContent.length > 130) {\r\n        this.$message.warning('评论内容长度不能超过130个字符')\r\n        return\r\n      }\r\n      if (this.commentContent.trim().length == 0) {\r\n        this.$message.warning('不能发空白内容')\r\n        return\r\n      }\r\n      if (this.isReply) {\r\n        commentData.parentId =\r\n          this.currentReplyData.parentId == 0\r\n            ? this.currentReplyData.id\r\n            : this.currentReplyData.parentId\r\n        commentData.replyId = this.currentReplyData.id\r\n      } else {\r\n        commentData.parentId = 0\r\n        commentData.replyId = 0\r\n      }\r\n      saveComment(commentData).then(() => {\r\n        this.isReply = false\r\n        this.commentContent = ''\r\n        this.$message.success('发布评论成功')\r\n        this.getData()\r\n      })\r\n    },\r\n    async reloadLikeData() {\r\n      const { data: relationData } = await this.getLikeRelation()\r\n      relationData.forEach((item, index) => {\r\n        this.$set(this.likeRelation, index, item)\r\n      })\r\n    },\r\n    replyUser(replyCommentData) {\r\n      if (!this.$store.state.userInfo) {\r\n        this.$message.warning('请登录之后再进行操作')\r\n        return\r\n      }\r\n\r\n      if (this.commentContent) this.commentContent = ''\r\n      this.currentReplyData = replyCommentData\r\n      this.isReply = true\r\n      this.$refs.postCommentInputRef.focus()\r\n    },\r\n    reloadComment() {\r\n      this.getData()\r\n    }\r\n  },\r\n  components: { NoteCommentList }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.comment-container {\r\n  padding: 40px 20px;\r\n  .self-comment {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 15px;\r\n  }\r\n  .login-tip {\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .comments {\r\n    border-top: 1px solid #d9d9da;\r\n    padding-top: 40px;\r\n    margin-left: 30px;\r\n  }\r\n}\r\n</style>\r\n"]}]}