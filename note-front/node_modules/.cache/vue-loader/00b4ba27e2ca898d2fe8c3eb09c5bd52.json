{"remainingRequest":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\Note.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\src\\views\\notes\\childrens\\Note.vue","mtime":1703320567679},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\babel-loader@8.3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2718075060\\Desk\\sspku\\云计算\\Note\\note-front\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgImdpdGh1Yi1tYXJrZG93bi1jc3MvZ2l0aHViLW1hcmtkb3duLWxpZ2h0LmNzcyI7DQppbXBvcnQgTWFya2Rvd25JdCBmcm9tICJtYXJrZG93bi1pdCI7DQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgY29udGVudFRleHQ6IFN0cmluZywNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdHJhbnNpdGlvbkNvbnRlbnRUZXh0OiAiIiwNCiAgICAgIGxvYWRpbmc6IHRydWUsDQogICAgfTsNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBjb250ZW50VGV4dChuZXdDb250ZW50KSB7DQogICAgICB0aGlzLnRyYW5zaXRpb25Db250ZW50VGV4dCA9IG5ldyBNYXJrZG93bkl0KCkucmVuZGVyKG5ld0NvbnRlbnQpOw0KICAgICAgLy8g6Ziy5q2i6aG16Z2i6Zeq5YqoDQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICB9LCAzMDApOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Note.vue"],"names":[],"mappings":";AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Note.vue","sourceRoot":"src/views/notes/childrens","sourcesContent":["<template>\r\n  <div class=\"note\">\r\n    <el-skeleton :rows=\"16\" animated v-if=\"loading\" style=\"padding: 50px\" />\r\n    <div v-else v-html=\"transitionContentText\" class=\"markdown-body\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"github-markdown-css/github-markdown-light.css\";\r\nimport MarkdownIt from \"markdown-it\";\r\nexport default {\r\n  props: {\r\n    contentText: String,\r\n  },\r\n  data() {\r\n    return {\r\n      transitionContentText: \"\",\r\n      loading: true,\r\n    };\r\n  },\r\n  watch: {\r\n    contentText(newContent) {\r\n      this.transitionContentText = new MarkdownIt().render(newContent);\r\n      // 防止页面闪动\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 300);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.note {\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  min-height: 700px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.markdown-body {\r\n  box-sizing: border-box;\r\n  min-width: 200px;\r\n  max-width: 980px;\r\n  margin: 0 auto;\r\n  padding: 45px;\r\n}\r\n</style>\r\n"]}]}